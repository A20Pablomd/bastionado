#version: '3.8'

services:
  server1:
    container_name: server1
    build:
      context: cluster/.
    image: bastionado-cluster
    pull_policy: never
    networks:
      cluster:
        ipv4_address: 172.100.0.101

  server2:
    container_name: server2
    image: bastionado-cluster
    pull_policy: never
    networks:
      cluster:
        ipv4_address: 172.100.0.102

  server3:
    container_name: server3
    image: bastionado-cluster
    pull_policy: never
    networks:
      cluster:
        ipv4_address: 172.100.0.103

  server4:
    container_name: server4
    image: bastionado-cluster
    pull_policy: never
    networks:
      cluster:
        ipv4_address: 172.100.0.104

  server5:
    container_name: server5
    image: bastionado-cluster
    pull_policy: never
    networks:
      cluster:
        ipv4_address: 172.100.0.105

  server6:
    container_name: server6
    image: bastionado-cluster
    pull_policy: never
    networks:
      cluster:
        ipv4_address: 172.100.0.106

#Creamos o haproxy
  haproxy:
    container_name: haproxy
    build: haproxy/.
    cap_add:
      - NET_ADMIN
      - NET_RAW
    networks:
      cluster:
        ipv4_address: 172.100.0.200
      monitor:
        ipv4_address: 172.200.0.200

#Creamos o prometheus
  prometheus:
    container_name: prometheus
    build: prometheus/.
    networks:
      monitor:
        ipv4_address: 172.200.0.210

  alertmanager:
    container_name: alertmanager
    build: alertmanager/.
    networks:
      monitor:
        ipv4_address: 172.200.0.215

  grafana:
    container_name: grafana
    build: grafana/.
    networks:
      monitor:
        ipv4_address: 172.200.0.220

#Creamos as redes
networks:
  cluster:
#    network_name: cluster
    driver: bridge
    ipam:
      config:
        - subnet: 172.100.0.0/24
  monitor:
#    network_name: monitor
    driver: bridge
    ipam:
       config:
        - subnet: 172.200.0.0/24
