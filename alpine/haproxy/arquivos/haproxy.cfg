#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.5/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           5s
    maxconn                 3000

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
frontend stats
        bind 172.100.0.200:8080
        stats enable
        stats uri /stats
        stats refresh 10s
        stats auth administrator:abc123.

frontend prometheus
	bind 172.200.0.200:9090
	mode http
	http-request use-service prometheus-exporter
	no log


frontend cluster_frontend
        bind 172.100.0.200:80
        acl host_web1 hdr(host) -i www.web1.example
	acl host_web2 hdr(host) -i www.web2.example
	use_backend sitio_web1 if host_web1
	use_backend sitio_web2 if host_web2

#---------------------------------------------------------------------
# round robin balancing between the various backends
#---------------------------------------------------------------------

backend sitio_web1
        balance roundrobin
        server server1 172.100.0.101:80 check
        server server2 172.100.0.102:80 check
	server server5 172.100.0.105:80 backup check
        

backend sitio_web2
	balance roundrobin
	server server3 172.100.0.103:80 check weight 3
        server server4 172.100.0.104:80 check weight 1
	server server5 172.100.0.105:80 backup check
